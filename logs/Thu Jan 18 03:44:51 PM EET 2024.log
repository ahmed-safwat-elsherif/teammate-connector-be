Connected to SMTP Server: smtp.freesmtpservers.com
[32m‚úÖ Database Connection has been established successfully.[39m
Server is running on port:3001
[32m‚úÖ Cabinet table is created/altered successfully[39m
[32m‚úÖ Risk table is created/altered successfully[39m
[32m‚úÖ Risk Folders table is created/altered successfully[39m
[32m‚úÖ Control Folders table is created/altered successfully[39m
[32m‚úÖ Control table is created/altered successfully[39m
[32m‚úÖ FolderMap table is created/altered successfully[39m
[32m‚úÖ Users table is created/altered successfully[39m
Request:  { method: 'POST', endpoint: '/sync/run' }
Sending Service Sync Email to: elshareslam@gmail.com...
46

------------------------------
      -:{ START Sync }:-     
------------------------------

Email Sent
'Request failed with status code 401'
{
  transitional: {
    silentJSONParsing: true,
    forcedJSONParsing: true,
    clarifyTimeoutError: false
  },
  adapter: 'http',
  transformRequest: [ [Function: transformRequest] ],
  transformResponse: [ [Function: transformResponse] ],
  timeout: 60000,
  xsrfCookieName: 'XSRF-TOKEN',
  xsrfHeaderName: 'X-XSRF-TOKEN',
  maxContentLength: -1,
  maxBodyLength: -1,
  env: {
    FormData: [Function: FormData] {
      LINE_BREAK: '\r\n',
      DEFAULT_CONTENT_TYPE: 'application/octet-stream'
    },
    Blob: [class Blob]
  },
  validateStatus: [Function: validateStatus],
  headers: Object [AxiosHeaders] {
    Accept: 'application/json, text/plain, */*',
    'Content-Type': undefined,
    Authorization: 'kcYAqCParl7tYbPW/YxUZUx9WtKYqkCyGLlbGTe8c50=',
    'User-Agent': 'axios/1.5.0',
    'Accept-Encoding': 'gzip, compress, deflate, br'
  },
  baseURL: 'https://grafenesales.teammatehosting.com/TeamMate/api/v1/TeamStore',
  params: { objectTypeId: 24 },
  method: 'get',
  url: '/Cabinets/120',
  data: undefined
}
‚ùåSyncronization failed
{ message: "Couldn't update a Cabinet of title (The Bank) ID = 120" }
Request:  { method: 'POST', endpoint: '/auth/token/refresh' }
Request:  { method: 'POST', endpoint: '/auth/token/refresh' }
Request:  { method: 'GET', endpoint: '/logs/files' }
Request:  { method: 'GET', endpoint: '/logs/files/3' }
